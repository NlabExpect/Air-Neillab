{
  "_args": [
    [
      "graphql@git://github.com/graphql/graphql-js.git#npm",
      "/Users/NeilLab/Desktop/AirAlienCom"
    ]
  ],
  "_from": "git://github.com/graphql/graphql-js.git#npm",
  "_id": "graphql@0.8.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/graphql",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/graphql/graphql-js/npm/package.json",
      "gitUrl": "git://github.com/graphql/graphql-js.git#npm",
      "httpsUrl": "git+https://github.com/graphql/graphql-js.git#npm",
      "shortcut": "github:graphql/graphql-js#npm",
      "ssh": "git@github.com:graphql/graphql-js.git#npm",
      "sshUrl": "git+ssh://git@github.com/graphql/graphql-js.git#npm",
      "type": "github"
    },
    "name": "graphql",
    "raw": "graphql@git://github.com/graphql/graphql-js.git#npm",
    "rawSpec": "git://github.com/graphql/graphql-js.git#npm",
    "scope": null,
    "spec": "git://github.com/graphql/graphql-js.git#npm",
    "type": "hosted"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git://github.com/graphql/graphql-js.git#995151f9fa5dd4d0a4228fd4d31e71b45f211651",
  "_shasum": "e75972ff4fc502b2ca3732528bbd520f36583888",
  "_shrinkwrap": null,
  "_spec": "graphql@git://github.com/graphql/graphql-js.git#npm",
  "_where": "/Users/NeilLab/Desktop/AirAlienCom",
  "bugs": {
    "url": "https://github.com/graphql/graphql-js/issues"
  },
  "contributors": [
    {
      "email": "lee@leebyron.com",
      "name": "Lee Byron",
      "url": "http://leebyron.com/"
    },
    {
      "email": "schrockn@fb.com",
      "name": "Nicholas Schrock"
    },
    {
      "email": "dschafer@fb.com",
      "name": "Daniel Schafer"
    }
  ],
  "dependencies": {
    "iterall": "1.0.2"
  },
  "description": "A Query Language and Runtime which can target any service.",
  "devDependencies": {},
  "gitHead": "995151f9fa5dd4d0a4228fd4d31e71b45f211651",
  "homepage": "https://github.com/graphql/graphql-js",
  "license": "BSD-3-Clause",
  "main": "index.js",
  "name": "graphql",
  "optionalDependencies": {},
  "readme": "# GraphQL.js\n\nThe JavaScript reference implementation for GraphQL, a query language for APIs created by Facebook.\n\n[![npm version](https://badge.fury.io/js/graphql.svg)](http://badge.fury.io/js/graphql)\n[![Build Status](https://travis-ci.org/graphql/graphql-js.svg?branch=master)](https://travis-ci.org/graphql/graphql-js?branch=master)\n[![Coverage Status](https://coveralls.io/repos/graphql/graphql-js/badge.svg?branch=master)](https://coveralls.io/r/graphql/graphql-js?branch=master)\n\nSee more complete documentation at http://graphql.org/ and\nhttp://graphql.org/graphql-js/.\n\nLooking for help? Find resources [from the community](http://graphql.org/community/).\n\n\n## Getting Started\n\nAn overview of GraphQL in general is available in the\n[README](https://github.com/facebook/graphql/blob/master/README.md) for the\n[Specification for GraphQL](https://github.com/facebook/graphql). That overview\ndescribes a simple set of GraphQL examples that exist as [tests](src/__tests__)\nin this repository. A good way to get started with this repository is to walk\nthrough that README and the corresponding tests in parallel.\n\n### Using GraphQL.js\n\nInstall GraphQL.js from npm\n\n```sh\nnpm install --save graphql\n```\n\nGraphQL.js provides two important capabilities: building a type schema, and\nserving queries against that type schema.\n\nFirst, build a GraphQL type schema which maps to your code base.\n\n```js\nimport {\n  graphql,\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLString\n} from 'graphql';\n\nvar schema = new GraphQLSchema({\n  query: new GraphQLObjectType({\n    name: 'RootQueryType',\n    fields: {\n      hello: {\n        type: GraphQLString,\n        resolve() {\n          return 'world';\n        }\n      }\n    }\n  })\n});\n```\n\nThis defines a simple schema with one type and one field, that resolves\nto a fixed value. The `resolve` function can return a value, a promise,\nor an array of promises. A more complex example is included in the top\nlevel [tests](src/__tests__) directory.\n\nThen, serve the result of a query against that type schema.\n\n```js\nvar query = '{ hello }';\n\ngraphql(schema, query).then(result => {\n\n  // Prints\n  // {\n  //   data: { hello: \"world\" }\n  // }\n  console.log(result);\n\n});\n```\n\nThis runs a query fetching the one field defined. The `graphql` function will\nfirst ensure the query is syntactically and semantically valid before executing\nit, reporting errors otherwise.\n\n```js\nvar query = '{ boyhowdy }';\n\ngraphql(schema, query).then(result => {\n\n  // Prints\n  // {\n  //   errors: [\n  //     { message: 'Cannot query field boyhowdy on RootQueryType',\n  //       locations: [ { line: 1, column: 3 } ] }\n  //   ]\n  // }\n  console.log(result);\n\n});\n```\n\n### Want to ride the bleeding edge?\n\nThe `npm` branch in this repository is automatically maintained to be the last\ncommit to `master` to pass all tests, in the same form found on npm. It is\nrecommend to use builds deployed npm for many reasons, but if you want to use\nthe latest not-yet-released version of graphql-js, you can do so by depending\ndirectly on this branch:\n\n```\nnpm install graphql@git://github.com/graphql/graphql-js.git#npm\n```\n\n### Contributing\n\nWe actively welcome pull requests, learn how to\n[contribute](https://github.com/graphql/graphql-js/blob/master/CONTRIBUTING.md).\n\n### Changelog\n\nChanges are tracked as [Github releases](https://github.com/graphql/graphql-js/releases).\n\n### License\n\nGraphQL is [BSD-licensed](https://github.com/graphql/graphql-js/blob/master/LICENSE).\nWe also provide an additional [patent grant](https://github.com/graphql/graphql-js/blob/master/PATENTS).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/graphql/graphql-js.git"
  },
  "version": "0.8.1"
}
